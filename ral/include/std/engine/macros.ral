/*
 * c3ds-projects - Assorted compatibility fixes & useful tidbits
 * Written starting in 2022 by contributors (see CREDITS.txt)
 * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
 * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
 */

/*
 * C2E command macros
 */

include "std/engine/commands/agents.ral";
include "std/engine/commands/brain.ral";
include "std/engine/commands/camera.ral";
include "std/engine/commands/cd.ral";
include "std/engine/commands/compounds.ral";
include "std/engine/commands/creatures.ral";
include "std/engine/commands/debug.ral"; // INCOMPLETE
include "std/engine/commands/files.ral";
// flow omitted because compiler handles it
include "std/engine/commands/genetics.ral";
include "std/engine/commands/history.ral"; // INCOMPLETE
include "std/engine/commands/input.ral";
include "std/engine/commands/map.ral"; // INCOMPLETE
include "std/engine/commands/motion.ral"; // INCOMPLETE
include "std/engine/commands/net.ral";
include "std/engine/commands/ports.ral"; // INCOMPLETE
include "std/engine/commands/resources.ral";
include "std/engine/commands/scripts.ral"; // INCOMPLETE
include "std/engine/commands/sounds.ral";
include "std/engine/commands/time.ral";
include "std/engine/commands/variables.ral";
include "std/engine/commands/vehicles.ral";
include "std/engine/commands/world.ral";

// Game variable accessors, expanded
// This *might* get removed later

// `GAME` variable as `int`. Can be assigned to as so: `gameInt("test") = 5;`
macro gameInt(str &key) game(key)!int;
// `EAME` variable as `int`. Can be assigned to as so: `eameInt("test") = 5;`
macro eameInt(str &key) eame(key)!int;
// `GAME` variable as `bool`. Can be assigned to as so: `gameBool("test") = true;`
macro gameBool(str &key) game(key)!bool;
// `EAME` variable as `bool`. Can be assigned to as so: `eameBool("test") = true;`
macro eameBool(str &key) eame(key)!bool;
// `GAME` variable as `num`. Can be assigned to as so: `gameNum("test") = 5;`
macro gameNum(str &key) game(key)!num;
// `EAME` variable as `num`. Can be assigned to as so: `eameNum("test") = 5;`
macro eameNum(str &key) eame(key)!num;
// `GAME` variable as `float`. Can be assigned to as so: `gameFloat("test") = 5.0;`
macro gameFloat(str &key) game(key)!float;
// `EAME` variable as `float`. Can be assigned to as so: `eameFloat("test") = 5.0;`
macro eameFloat(str &key) eame(key)!float;
// `GAME` variable as `str`. Can be assigned to as so: `gameStr("test") = "Hello";`
macro gameStr(str &key) game(key)!str;
// `EAME` variable as `str`. Can be assigned to as so: `eameStr("test") = "Hello";`
macro eameStr(str &key) eame(key)!str;
// `GAME` variable as `Agent`. Can be assigned to as so: `gameAgent("test") = ownr;`
macro gameAgent(str &key) game(key)!Agent;
// `EAME` variable as `Agent`. Can be assigned to as so: `eameAgent("test") = ownr;`
macro eameAgent(str &key) eame(key)!Agent;


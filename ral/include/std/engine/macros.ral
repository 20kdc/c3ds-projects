/*
 * c3ds-projects - Assorted compatibility fixes & useful tidbits
 * Written starting in 2022 by contributors (see CREDITS.txt)
 * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
 * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
 */

/*
 * C2E command macros
 */

include "std/engine/commands/agents.ral";
// brain not yet added
include "std/engine/commands/camera.ral";
// cd not yet added
// compounds not yet added
// creatures not yet added
// debug not yet added
// files not yet added
// flow omitted because compiler handles it
include "std/engine/commands/genetics.ral";
// history not yet added
// input not yet added
// map not yet added
// motion not yet added
// net not yet added
// ports not yet added
// resources not yet added
// scripts not yet added
// sounds not yet added
// time not yet added
// variables not yet added
// vehicles not yet added
include "std/engine/commands/world.ral";

macro read(str &tag, int &index) &'read {tag} {index}'!str;

macro () inst() &'inst';
macro () stop() &'stop';

macro () outv(num &value) &'outv {value}';
macro () outs(str &value) &'outs {value}';
macro () outx(str &value) &'outx {value}';

macro () scrx(int &family, int &genus, int &species, int &scr) &'scrx {family, genus, species, scr}';

macro () mvsf(num &x, num &y) &'mvsf {x, y}';
macro () frel(Agent? &dst) &'frel {dst}';
macro () flto(num &x, num &y) &'flto {x, y}';

// various
macro histName(str &moniker) &'hist name {moniker}'!str;
macro histGend(str &moniker) &'hist gend {moniker}'!int;
macro () histWipe(str &moniker) &'hist wipe {moniker}';
macro histWnam(str &moniker, int &e) &'hist wnam {moniker, e}'!str;
macro histWtik(str &moniker, int &e) &'hist wtik {moniker, e}'!int;
macro histWuid(str &moniker, int &e) &'hist wuid {moniker, e}'!str;
macro histWvet(str &moniker) &'hist wvet {moniker}'!bool;
macro ooww(str &moniker) &'ooww {moniker}'!int;

macro subs(str &text, int &start, int &len) &'subs {text, start, len}'!str;
macro vtos(num &val) &'vtos {val}'!str;

// type
macro type(any &value) &'type {value}'!int;

// physics props
macro elas() &'elas'!int;
macro () elas(int &value) &'elas {value}';
macro accg() &'accg'!float;
macro () accg(float &value) &'accg {value}';
macro aero() &'aero'!int;
macro () aero(int &value) &'aero {value}';
macro fric() &'fric'!int;
macro () fric(int &value) &'fric {value}';
macro perm() &'perm'!int;
macro () perm(int &value) &'perm {value}';

// Game variable accessor basis

macro game(str &key) &'game {key}';
macro eame(str &key) &'eame {key}';

macro gameInt(str &key) game(key)!int;
macro eameInt(str &key) eame(key)!int;
macro gameBool(str &key) game(key)!bool;
macro eameBool(str &key) eame(key)!bool;
macro gameNum(str &key) game(key)!num;
macro eameNum(str &key) eame(key)!num;
macro gameFloat(str &key) game(key)!float;
macro eameFloat(str &key) eame(key)!float;
macro gameStr(str &key) game(key)!str;
macro eameStr(str &key) eame(key)!str;
macro gameAgent(str &key) game(key)!Agent;
macro eameAgent(str &key) eame(key)!Agent;


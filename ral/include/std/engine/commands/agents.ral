/*
 * c3ds-projects - Assorted compatibility fixes & useful tidbits
 * Written starting in 2022 by contributors (see CREDITS.txt)
 * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
 * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
 */

/*
 * 2.286c/Agents
 */

macro abba() &'abba'!int;

macro () alph(int &alpha, int &enable) &'alph {alpha, enable}';

// ANIM uses byte-strings, so must be in inline CAOS directly.

macro () anms(str &anim) &'anms {anim}';

macro attr() &'attr'!int;
macro () attr(int &value) &'attr {value}';

macro base() &'base'!int;
macro () base(int &value) &'base {value}';

macro bhvr() &'bhvr'!int;
macro () bhvr(int &value) &'bhvr {value}';

// 'call' is a keyword
macro () callIndirect(int &scrId, any &p1, any &p2) &'call {scrId, p1, p2}';

macro carr() &'carr'!Agent?;

macro cata() &'cata'!int;

macro cati(int &f, int &g, int &s) &'cati {f, g, s}'!int;

macro () cato(int &c) &'cato {c}';

macro catx(int &c) &'catx {c}'!str;

macro clac() &'clac'!int;

macro clik(int &c) &'clik {c}'!int;

macro () core(num &a, num &b, num &c, num &d) &'core {a, b, c, d}';

macro () dcor(int &a) &'dcor {a}';

macro disq(Agent &a) &'disq {a}'!float;

macro () drop() &'drop';

macro () dsee(int &a) &'dsee {a}';

// ENUM, ESEE, ETCH handled by compiler

macro fltx() &'fltx'!float;
macro flty() &'flty'!float;

macro fmly() &'fmly'!int;

macro () frat(int &a) &'frat {a}';

// FROM handled by compiler

macro () gait(int &a) &'gait {a}';

macro () gall(str &a, int &b) &'gall {a, b}';
macro gall() &'gall'!str;

macro gnus() &'gnus'!int;

macro hand() &'hand'!str;
macro () hand(str &value) &'hand {value}';

macro held() &'held'!Agent?;

macro hght() &'hght'!int;

macro iitt() &'iitt'!Agent?;

macro imsk() &'imsk'!int;

macro () kill(Agent &value) &'kill {value}';

macro () mesgWrit(Agent &value, int &msgId) &'mesg writ {value, msgId}';
macro () mesgWrtP(Agent &value, int &msgId, any &p1, any &p2, int &delay) &'mesg writ {value, msgId, p1, p2, delay}';

macro mira() &'mira'!int;
macro () mira(int &a) &'mira {a}';

macro mows() &'mows'!int;

macro mthx() &'mthx'!float;
macro mthy() &'mthy'!float;

macro ncls(Agent? &prev, int &f, int &g, int &s) &'ncls {prev, f, g, s}'!Agent?;

macro () newSimp(int &family, int &genus, int &species, str &gallery, int &count, int &first, int &plane) &'new: simp {family, genus, species, gallery, count, first, plane}';

// NEXT is handled by compiler

macro () nohh() &'nohh';

// NULL is handled by compiler

macro () over() &'over';

// OWNR is handled by compiler

macro paus() &'paus'!int;
macro () paus(int &a) &'paus {a}';

macro pcls(Agent? &n, int &f, int &g, int &s) &'pcls {n, f, g, s}'!Agent?;

macro plne() &'plne'!int;
macro () plne(int &a) &'plne {a}';

macro pntr() &'pntr'!Pointer;

// POSB below

macro pose() &'pose'!int;
macro () pose(int &value) &'pose {value}';

// POS, in alphabetical order B.LRTXY
// Top-left
macro posl() &'posl'!float;
macro post() &'post'!float;
// Bottom-right
macro posr() &'posr'!float;
macro posb() &'posb'!float;
// Centre
macro posx() &'posx'!float;
macro posy() &'posy'!float;

macro puhl(int &p, int &xy) &'puhl {p, xy}'!int;
macro () puhl(int &p, int &x, int &y) &'puhl {p, x, y}';

macro pupt(int &p, int &xy) &'pupt {p, xy}'!int;
macro () pupt(int &p, int &x, int &y) &'pupt {p, x, y}';

macro rnge() &'rnge'!float;
macro () rnge(num &a) &'rnge {a}';

macro () rtar(int &family, int &genus, int &species) &'rtar {family, genus, species}';

macro seee(Agent &a, Agent &b) &'seee {a, b}'!bool;

macro () show(int &a) &'show {a}';

macro spcs() &'spcs'!int;

macro () star(int &family, int &genus, int &species) &'star {family, genus, species}';

// TARG is handled by compiler

macro tcor(num &a, num &b, num &c, num &d) &'tcor {a, b, c, d}'!bool;

macro tick() &'tick'!int;
macro () tick(int &a) &'tick {a}';

macro () tino(int &r, int &g, int &b, int &ro, int &s) &'tino {r, g, b, ro, s}';
macro () tint(int &r, int &g, int &b, int &ro, int &s) &'tint {r, g, b, ro, s}';
macro tint(int &a) &'tint {a}'!int;

macro totl(int &family, int &genus, int &species) &'totl {family, genus, species}'!int;

macro touc(Agent &a, Agent &b) &'touc {a, b}'!bool;

macro tran(int &x, int &y) &'tran {x, y}'!bool;

macro () ttar(int &family, int &genus, int &species) &'ttar {family, genus, species}';

macro twin(Agent &o, int &n) &'twin {o, n}'!Agent;

macro () ucln() &'ucln';

macro visi(int &a) &'visi {a}'!bool;

macro wdth() &'wdth'!int;

macro wild(int &f, int &g, int &s, str &ts, int &ofs) &'wild {f, g, s, ts, ofs}'!str;

// _IT_ is handled by compiler

